version: 1

project_name: cfpurge

before:
  hooks:
    - go mod tidy

builds:
  - id: cfpurge
    main: .
    binary: cfpurge
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.buildTime={{.CommitDate}}
    mod_timestamp: '{{ .CommitTimestamp }}'

archives:
  - id: cfpurge
    format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE*

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^Merge pull request'
      - '^chore'

signs:
  - artifacts: checksum
    args: ["--batch", "-u", "{{ .Env.GPG_FINGERPRINT }}", "--output", "${signature}", "--detach-sign", "${artifact}"]

snapshot:
  name_template: "{{ incpatch .Version }}-next"

release:
  github:
    owner: erfianugrah
    name: cache-purge-go
  prerelease: auto
  draft: false
  name_template: "{{.ProjectName}} v{{.Version}}"
  header: |
    # {{.ProjectName}} v{{.Version}}
    
    ## Release Notes
  footer: |
    ## Installation
    
    ```shell
    # Install with go
    go install github.com/erfianugrah/cache-purge-go@v{{.Version}}
    
    # Or download the binary directly from the releases page
    ```
